[tox]
envlist =
    py{39,310,311,312}
    lint
    type
    security
    coverage
    docs
skip_missing_interpreters = true
isolated_build = true

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311, lint, type, security, coverage, docs
    3.12: py312

[testenv]
description = Run tests with pytest
deps =
    pytest
    pytest-asyncio
    pytest-cov
    responses
    freezegun
extras = dev
commands =
    pytest {posargs:tests/ --cov=tripleten_cli --cov=client --cov=render --cov-report=term-missing}

[testenv:lint]
description = Run linting tools
skip_install = false
deps =
    black
    isort
    flake8
commands =
    black --check --diff src/ tests/
    isort --check-only --diff src/ tests/
    flake8 src/ tests/

[testenv:format]
description = Format code with black and isort
skip_install = false
deps =
    black
    isort
commands =
    black src/ tests/
    isort src/ tests/

[testenv:type]
description = Run type checking with mypy
deps =
    mypy
    types-requests
commands =
    mypy src/ --ignore-missing-imports

[testenv:security]
description = Run security analysis
deps =
    bandit[toml]
    safety
commands =
    bandit -r src/ -ll
    safety check

[testenv:coverage]
description = Generate coverage report
deps =
    pytest
    pytest-cov
    responses
    freezegun
extras = dev
commands =
    pytest tests/ --cov=tripleten_cli --cov=client --cov=render --cov-report=html --cov-report=xml --cov-report=term-missing --cov-fail-under=80

[testenv:integration]
description = Run integration tests
deps =
    pytest
    pytest-asyncio
    pytest-cov
    responses
    freezegun
extras = dev
commands =
    pytest tests/ -m integration --cov=tripleten_cli --cov=client --cov=render --cov-report=term-missing

[testenv:slow]
description = Run slow tests
deps =
    pytest
    pytest-asyncio
    pytest-cov
    responses
    freezegun
extras = dev
commands =
    pytest tests/ -m slow --cov=tripleten_cli --cov=client --cov=render --cov-report=term-missing

[testenv:docs]
description = Build documentation
changedir = docs
deps =
    sphinx
    sphinx-rtd-theme
    sphinx-click
extras = dev
commands =
    sphinx-apidoc -o api ../src/
    sphinx-build -W -b html . _build/html

[testenv:clean]
description = Remove build and test artifacts
deps =
skip_install = true
allowlist_externals =
    rm
    find
commands =
    rm -rf build/
    rm -rf dist/
    rm -rf .eggs/
    find . -type d -name "*.egg-info" -exec rm -rf {} +
    find . -type d -name "__pycache__" -exec rm -rf {} +
    find . -type f -name "*.pyc" -delete
    rm -rf .coverage
    rm -rf coverage.xml
    rm -rf htmlcov/
    rm -rf .pytest_cache/
    rm -rf .mypy_cache/
    rm -rf .tox/

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
per-file-ignores =
    __init__.py:F401
exclude =
    .git,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    .eggs,
    .tox,
    .venv

[coverage:run]
source =
    src/tripleten_cli
    client
    render
omit =
    */tests/*
    */test_*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
